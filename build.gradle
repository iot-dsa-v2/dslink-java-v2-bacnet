import groovy.json.JsonSlurper

apply plugin: 'application'
apply plugin: 'java-library'

group 'org.iot-dsa'
mainClassName = 'org.iot.dsa.dslink.DSLink'
sourceCompatibility = 1.8
targetCompatibility = 1.8

build {
    def inputFile = file('dslink.json')
    def json = new JsonSlurper().parseText(inputFile.text)
    version = json.version
}

repositories {
    mavenLocal()
    jcenter()
    maven {
        url 'https://jitpack.io'
    }
}

dependencies {
    implementation 'org.iot-dsa:dslink-v2-websocket:+' //for a locally installed sdk   
    // implementation 'com.github.iot-dsa-v2:sdk-dslink-java-v2:+'
    implementation 'com.github.iot-dsa-v2:driver-framework-java-v2-prototype:master-SNAPSHOT'
    implementation 'org.apache.commons:commons-lang3:3.4'
    implementation 'commons-logging:commons-logging:+'
    //Testing framework
    //testCompile ':driver-framework-java-v2-prototype:+:tests'
    //Python for Java for python tests
    testImplementation group: 'org.python', name: 'jython-standalone', version: '2.7.0'
    //Diff utils and dependency for exact match test
    testImplementation 'com.github.bkromhout:java-diff-utils:+'
    testImplementation 'org.apache.commons:commons-lang3:3.4'
    //Junit for automated build/testing
    testImplementation 'junit:junit:+'
    //For unit tests
    testImplementation 'org.mockito:mockito-all:+'
}

applicationDistribution.from(new File(project.projectDir, "/dslink.json"))

run {
    args System.getProperty("exec.args", "").split()
    workingDir project.buildDir
}

wrapper {
    gradleVersion = '4.10.2'
}
